
StopWatch.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000017c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000a  00800060  0000017c  000001f0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000001fa  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000022c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000030  00000000  00000000  00000268  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000076d  00000000  00000000  00000298  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000061f  00000000  00000000  00000a05  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000035d  00000000  00000000  00001024  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000064  00000000  00000000  00001384  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000351  00000000  00000000  000013e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000214  00000000  00000000  00001739  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000020  00000000  00000000  0000194d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec e7       	ldi	r30, 0x7C	; 124
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	aa 36       	cpi	r26, 0x6A	; 106
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 99 00 	call	0x132	; 0x132 <main>
  7a:	0c 94 bc 00 	jmp	0x178	; 0x178 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <Segment_Display_MUL>:
		for (j = 0; j < 500; j++)
		{
			Segment_Display_MUL(i);
		}
	}
}
  82:	cf 93       	push	r28
  84:	df 93       	push	r29
  86:	cd b7       	in	r28, 0x3d	; 61
  88:	de b7       	in	r29, 0x3e	; 62
  8a:	2a 97       	sbiw	r28, 0x0a	; 10
  8c:	0f b6       	in	r0, 0x3f	; 63
  8e:	f8 94       	cli
  90:	de bf       	out	0x3e, r29	; 62
  92:	0f be       	out	0x3f, r0	; 63
  94:	cd bf       	out	0x3d, r28	; 61
  96:	9a e0       	ldi	r25, 0x0A	; 10
  98:	e0 e6       	ldi	r30, 0x60	; 96
  9a:	f0 e0       	ldi	r31, 0x00	; 0
  9c:	de 01       	movw	r26, r28
  9e:	11 96       	adiw	r26, 0x01	; 1
  a0:	01 90       	ld	r0, Z+
  a2:	0d 92       	st	X+, r0
  a4:	9a 95       	dec	r25
  a6:	e1 f7       	brne	.-8      	; 0xa0 <Segment_Display_MUL+0x1e>
  a8:	9d ec       	ldi	r25, 0xCD	; 205
  aa:	89 9f       	mul	r24, r25
  ac:	91 2d       	mov	r25, r1
  ae:	11 24       	eor	r1, r1
  b0:	29 2f       	mov	r18, r25
  b2:	26 95       	lsr	r18
  b4:	26 95       	lsr	r18
  b6:	26 95       	lsr	r18
  b8:	22 0f       	add	r18, r18
  ba:	32 2f       	mov	r19, r18
  bc:	33 0f       	add	r19, r19
  be:	33 0f       	add	r19, r19
  c0:	23 0f       	add	r18, r19
  c2:	82 1b       	sub	r24, r18
  c4:	28 2f       	mov	r18, r24
  c6:	96 95       	lsr	r25
  c8:	96 95       	lsr	r25
  ca:	96 95       	lsr	r25
  cc:	85 b3       	in	r24, 0x15	; 21
  ce:	8f 77       	andi	r24, 0x7F	; 127
  d0:	85 bb       	out	0x15, r24	; 21
  d2:	85 b3       	in	r24, 0x15	; 21
  d4:	80 64       	ori	r24, 0x40	; 64
  d6:	85 bb       	out	0x15, r24	; 21
  d8:	e1 e0       	ldi	r30, 0x01	; 1
  da:	f0 e0       	ldi	r31, 0x00	; 0
  dc:	ec 0f       	add	r30, r28
  de:	fd 1f       	adc	r31, r29
  e0:	e2 0f       	add	r30, r18
  e2:	f1 1d       	adc	r31, r1
  e4:	80 81       	ld	r24, Z
  e6:	88 0f       	add	r24, r24
  e8:	8b bb       	out	0x1b, r24	; 27
  ea:	ef ec       	ldi	r30, 0xCF	; 207
  ec:	f7 e0       	ldi	r31, 0x07	; 7
  ee:	31 97       	sbiw	r30, 0x01	; 1
  f0:	f1 f7       	brne	.-4      	; 0xee <Segment_Display_MUL+0x6c>
  f2:	00 c0       	rjmp	.+0      	; 0xf4 <Segment_Display_MUL+0x72>
  f4:	00 00       	nop
  f6:	85 b3       	in	r24, 0x15	; 21
  f8:	8f 7b       	andi	r24, 0xBF	; 191
  fa:	85 bb       	out	0x15, r24	; 21
  fc:	85 b3       	in	r24, 0x15	; 21
  fe:	80 68       	ori	r24, 0x80	; 128
 100:	85 bb       	out	0x15, r24	; 21
 102:	e1 e0       	ldi	r30, 0x01	; 1
 104:	f0 e0       	ldi	r31, 0x00	; 0
 106:	ec 0f       	add	r30, r28
 108:	fd 1f       	adc	r31, r29
 10a:	e9 0f       	add	r30, r25
 10c:	f1 1d       	adc	r31, r1
 10e:	80 81       	ld	r24, Z
 110:	88 0f       	add	r24, r24
 112:	8b bb       	out	0x1b, r24	; 27
 114:	8f ec       	ldi	r24, 0xCF	; 207
 116:	97 e0       	ldi	r25, 0x07	; 7
 118:	01 97       	sbiw	r24, 0x01	; 1
 11a:	f1 f7       	brne	.-4      	; 0x118 <Segment_Display_MUL+0x96>
 11c:	00 c0       	rjmp	.+0      	; 0x11e <Segment_Display_MUL+0x9c>
 11e:	00 00       	nop
 120:	2a 96       	adiw	r28, 0x0a	; 10
 122:	0f b6       	in	r0, 0x3f	; 63
 124:	f8 94       	cli
 126:	de bf       	out	0x3e, r29	; 62
 128:	0f be       	out	0x3f, r0	; 63
 12a:	cd bf       	out	0x3d, r28	; 61
 12c:	df 91       	pop	r29
 12e:	cf 91       	pop	r28
 130:	08 95       	ret

00000132 <main>:

int main(void)
{
	DDRA = 0xff;
 132:	8f ef       	ldi	r24, 0xFF	; 255
 134:	8a bb       	out	0x1a, r24	; 26
	DDRC = 0xff;
 136:	84 bb       	out	0x14, r24	; 20
	DDRD = 0;
 138:	11 ba       	out	0x11, r1	; 17
	u8 pause=0 , resume = 0;
	s8 i;
	u16 j;
	Segment_Display_MUL(30);
 13a:	8e e1       	ldi	r24, 0x1E	; 30
 13c:	0e 94 41 00 	call	0x82	; 0x82 <Segment_Display_MUL>
int main(void)
{
	DDRA = 0xff;
	DDRC = 0xff;
	DDRD = 0;
	u8 pause=0 , resume = 0;
 140:	00 e0       	ldi	r16, 0x00	; 0
	s8 i;
	u16 j;
	Segment_Display_MUL(30);
    while (1) 
    {
		for(i = 30; i >= 0;i--)
 142:	1e e1       	ldi	r17, 0x1E	; 30
 144:	16 c0       	rjmp	.+44     	; 0x172 <main+0x40>
		{
			for (j = 0; j < 500; j++)
			{
				Segment_Display_MUL(i);
 146:	81 2f       	mov	r24, r17
 148:	0e 94 41 00 	call	0x82	; 0x82 <Segment_Display_MUL>
				if (!GET_BIT(PORTD,2))
 14c:	92 99       	sbic	0x12, 2	; 18
 14e:	07 c0       	rjmp	.+14     	; 0x15e <main+0x2c>
				{
					if (pause == 0)
 150:	01 11       	cpse	r16, r1
 152:	06 c0       	rjmp	.+12     	; 0x160 <main+0x2e>
					{
						Segment_Display_MUL(i);
 154:	81 2f       	mov	r24, r17
 156:	0e 94 41 00 	call	0x82	; 0x82 <Segment_Display_MUL>
						pause = 1;
 15a:	01 e0       	ldi	r16, 0x01	; 1
						break;
 15c:	09 c0       	rjmp	.+18     	; 0x170 <main+0x3e>
					}
				}
				else
				{
					pause = 0;
 15e:	00 e0       	ldi	r16, 0x00	; 0
	Segment_Display_MUL(30);
    while (1) 
    {
		for(i = 30; i >= 0;i--)
		{
			for (j = 0; j < 500; j++)
 160:	21 96       	adiw	r28, 0x01	; 1
 162:	02 c0       	rjmp	.+4      	; 0x168 <main+0x36>
 164:	c0 e0       	ldi	r28, 0x00	; 0
 166:	d0 e0       	ldi	r29, 0x00	; 0
 168:	c4 3f       	cpi	r28, 0xF4	; 244
 16a:	81 e0       	ldi	r24, 0x01	; 1
 16c:	d8 07       	cpc	r29, r24
 16e:	58 f3       	brcs	.-42     	; 0x146 <main+0x14>
	s8 i;
	u16 j;
	Segment_Display_MUL(30);
    while (1) 
    {
		for(i = 30; i >= 0;i--)
 170:	11 50       	subi	r17, 0x01	; 1
 172:	11 23       	and	r17, r17
 174:	bc f7       	brge	.-18     	; 0x164 <main+0x32>
 176:	e5 cf       	rjmp	.-54     	; 0x142 <main+0x10>

00000178 <_exit>:
 178:	f8 94       	cli

0000017a <__stop_program>:
 17a:	ff cf       	rjmp	.-2      	; 0x17a <__stop_program>
